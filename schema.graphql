scalar GraphQLDate

type Task {
  _id: ID!
  id: Int!
  title: String!
  desc: String
  status: StatusType!
  created: GraphQLDate!
  due: GraphQLDate!
  priority: Int!
}

type DeleteResponse {
  deletedCount: Int!
}

enum StatusType {
  created
  expired
  done
}

input TaskInputs {
  title: String!
  desc: String
  status: StatusType! = created
  due: GraphQLDate!
  priority: Int!
}

input Filter {
  filter: String!
  order: Int!
}

input Search {
  search: String!
  filter: Filter!
}

##### Top level declarations

type Query {
  taskList(id: Int): [Task!]!
  taskFilter(filter: Filter): [Task!]!
  taskSearch(search: Search): [Task!]!
}

type Mutation {
  taskAdd(task: TaskInputs): Task!
  taskRemove(id: Int!): DeleteResponse
}
