scalar GraphQLDate

type Task {
  _id: ID!
  id: Int!
  title: String!
  desc: String
  completed: Boolean!
  created: GraphQLDate!
  due: GraphQLDate!
  priority: Int!
}

type DeleteResponse {
  deletedCount: Int!
}

type UpdateResponse {
  acknowledged: Boolean
  modifiedCount: Int
  upsertedCount: Int
  matchedCount: Int
  task: Task
}

input TaskInputs {
  title: String!
  desc: String
  completed: Boolean! = false
  due: GraphQLDate!
  priority: Int!
}

##### Top level declarations

type Query {
  taskList: [Task!]!
  taskGet(id: Int!): Task!
}

type Mutation {
  taskAdd(task: TaskInputs!): Task!
  taskRemove(id: Int!): DeleteResponse!
  taskUpdate(id: Int!, task: TaskInputs!): UpdateResponse!
}
